plugins {
  id 'java'
  id 'io.quarkus' version "${quarkusPluginVersion}"

  id 'org.openapi.generator' version '6.2.1'
  id 'nu.studer.jooq' version '7.1.1'
}

group = 'net.stepniak.morenomodels.serviceserverless'
version = '0.0.1-SNAPSHOT'

description = """morenomodels-serverless"""

sourceCompatibility = 11
targetCompatibility = 11


repositories {
  mavenCentral()
}

dependencies {
  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
  implementation 'io.quarkus:quarkus-amazon-lambda-rest'
  implementation 'io.quarkus:quarkus-resteasy'
  implementation 'io.quarkus:quarkus-resteasy-jackson'
  implementation 'io.quarkus:quarkus-hibernate-validator'

  implementation 'io.quarkus:quarkus-jdbc-postgresql'
  implementation 'io.quarkiverse.jooq:quarkus-jooq:0.3.0'

  implementation 'commons-io:commons-io:2.11.0'

  implementation 'io.quarkus:quarkus-amazon-secretsmanager'
  implementation 'io.quarkus:quarkus-amazon-s3'
  // Required by SecretsManager
  implementation 'com.google.guava:guava:31.1-jre'
  implementation 'software.amazon.awssdk:url-connection-client:2.18.24'

  testImplementation 'io.quarkus:quarkus-junit5'
  testImplementation 'io.rest-assured:rest-assured'

  jooqGenerator 'org.postgresql:postgresql:42.5.1'

  compileOnly 'org.projectlombok:lombok:1.18.24'
  annotationProcessor 'org.projectlombok:lombok:1.18.24'

  testCompileOnly 'org.projectlombok:lombok:1.18.24'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

jooq {
  configurations {
    main {  // name of the jOOQ configuration
      generationTool {
        logging = 'WARN'
        jdbc {
          driver = 'org.postgresql.Driver'
          url = 'jdbc:postgresql://localhost:5432/morenomodels'
          user = 'postgres'
          password = 's$cret'
          properties {
            property {
              key = 'ssl'
              value = 'false'
            }
          }
        }
        generator {
          name = 'org.jooq.codegen.DefaultGenerator'
          database {
            name = 'org.jooq.meta.postgres.PostgresDatabase'
            inputSchema = 'public'
            forcedTypes {
              forcedType {
                name = 'varchar'
                includeExpression = '.*'
                includeTypes = 'JSONB?'
              }
              forcedType {
                name = 'varchar'
                includeExpression = '.*'
                includeTypes = 'INET'
              }
            }
          }
          generate {
            deprecated = false
            records = true
            immutablePojos = true
            fluentSetters = true
          }
          target {
            packageName = 'net.stepniak.morenomodels.serviceserverless'
            directory = 'build/generated/jooq/main'  // default (can be omitted)
          }
          strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
        }
      }
    }
  }
}

compileJava {
  options.compilerArgs << '-parameters'
}

openApiGenerate {
  generatorName.set("jaxrs-spec")
  inputSpec.set("${project(':model').projectDir}/src/main/resources/moreno-models.yaml")
  outputDir.set("$buildDir/generated")
  packageName.set("net.stepniak.morenomodels.serviceserverless.generated")
  apiPackage.set("net.stepniak.morenomodels.serviceserverless.generated")
  modelPackage.set("net.stepniak.morenomodels.serviceserverless.generated.model")

  generateModelTests = false
  generateModelDocumentation = false
  generateApiTests = false
  generateApiDocumentation = false

  configOptions = [
      useSwaggerAnnotations: "false",
      interfaceOnly: "true",
      generateBuilders: "true",
      dateLibrary: "java8"
  ]
}

java.sourceSets["main"].java.srcDir("$buildDir/generated/src/gen/java")
